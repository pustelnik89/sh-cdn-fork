name: Build RSS feed with details

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * *"   # daily at 03:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generate RSS feed
        run: |
          FOLDER="assets/newsletter/activity/2025"
          OUTPUT="$FOLDER/feed.xml"

          echo '<?xml version="1.0" encoding="UTF-8" ?>' > $OUTPUT
          echo '<rss version="2.0">' >> $OUTPUT
          echo '<channel>' >> $OUTPUT
          echo '  <title>Weekly Activity Feed</title>' >> $OUTPUT
          echo '  <link>https://github.com/${{ github.repository }}</link>' >> $OUTPUT
          echo '  <description>Auto-generated RSS from weekly JSON files</description>' >> $OUTPUT
          echo "  <lastBuildDate>$(date -R)</lastBuildDate>" >> $OUTPUT

          for f in $(ls -1 $FOLDER/*.json | sort); do
            fname=$(basename "$f")
            raw_url="https://raw.githubusercontent.com/${{ github.repository }}/main/$FOLDER/$fname"

            # pubDate from filename
            filedate=$(echo $fname | sed 's/.json//' )
            pubdate=$(date -d $filedate -R 2>/dev/null || date -R)

            # Build human-readable HTML from JSON
            details=$(jq -r '
              map("<div style=\"margin-bottom:1em;\"><b>" + (.["Project / Publisher"] // "Unknown") + "</b>"
                + " (" + (.Type // "Unknown") + ")<br/>"
                + (if .Version then "Version: " + .Version + "<br/>" else "" end)
                + "<a href=\"" + (.Link // "#") + "\">" + (.Link // "") + "</a><br/>"
                + (.Description // "") + "</div>"
              ) | join("\n")
            ' "$f")

            echo "  <item>" >> $OUTPUT
            echo "    <title>$fname</title>" >> $OUTPUT
            echo "    <link>$raw_url</link>" >> $OUTPUT
            echo "    <guid isPermaLink=\"true\">$raw_url</guid>" >> $OUTPUT
            echo "    <pubDate>$pubdate</pubDate>" >> $OUTPUT
            echo "    <description><![CDATA[$details]]></description>" >> $OUTPUT
            echo "  </item>" >> $OUTPUT
          done

          echo '</channel>' >> $OUTPUT
          echo '</rss>' >> $OUTPUT

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add assets/newsletter/activity/2025/feed.xml
          git commit -m "Update RSS feed with details" || echo "No changes"
          git push
